// <auto-generated />
using System;
using EFRelations.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFRelations.Infrastructure.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20190315182734_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFRelations.Infrastructure.Data.Model.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("RegisteredOn");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateTime(1989, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "76876876868",
                            RegisteredOn = new DateTime(2019, 3, 15, 20, 27, 33, 152, DateTimeKind.Local).AddTicks(1877)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(1989, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "76876876868",
                            RegisteredOn = new DateTime(2019, 3, 15, 20, 27, 33, 157, DateTimeKind.Local).AddTicks(3387)
                        },
                        new
                        {
                            StudentId = 3,
                            Birthday = new DateTime(1989, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "76876876868",
                            RegisteredOn = new DateTime(2019, 3, 15, 20, 27, 33, 157, DateTimeKind.Local).AddTicks(3410)
                        });
                });

            modelBuilder.Entity("EFRelations.Infrastructure.Data.Model.Student", b =>
                {
                    b.OwnsOne("EFRelations.Infrastructure.Data.Model.PersonName", "Name", b1 =>
                        {
                            b1.Property<int>("StudentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName");

                            b1.HasKey("StudentId");

                            b1.ToTable("Students");

                            b1.HasOne("EFRelations.Infrastructure.Data.Model.Student")
                                .WithOne("Name")
                                .HasForeignKey("EFRelations.Infrastructure.Data.Model.PersonName", "StudentId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.HasData(
                                new
                                {
                                    StudentId = 1,
                                    FirstName = "Petar",
                                    LastName = "Ivanov"
                                },
                                new
                                {
                                    StudentId = 2,
                                    FirstName = "Ivan",
                                    LastName = "Ivanov"
                                },
                                new
                                {
                                    StudentId = 3,
                                    FirstName = "Ivan",
                                    LastName = "Petrov"
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
